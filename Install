#!/bin/sh

#
# Installation script
#
# 1) cp geo_htload.config.default geo_htload.config
# 2) cp ae_htload.config.default ae_htload.config
# 3) Install 
#

Usage=Install

#
#  Function called when the install fails.
#
installFailed ()
{
    echo "Installation Failed: `date`"
    exit 1
}

#
#  Verify the arguments to the script, there shouldn't be any
#
if [ $# -ne 0 ]
then
    echo "Usage: ${Usage}"
    installFailed
fi

#
# Make sure config files exist
#
cd `dirname $0`

# establish the config file
GEO_CONFIG=geo_htload.config

# Make sure config file exists and source it
if [ -r ${GEO_CONFIG} ]
then
    echo "Source ${GEO_CONFIG}"
    . ${GEO_CONFIG}
else
    echo "Cannot source configuration file: ${GEO_CONFIG}"
    installFailed
fi

# Check to see if this is a development installation
#
DEV=""
if [ "${INSTALL_TYPE}" = "dev" ]
then
    DEV="-d"
fi

#
# run DLAInstall for GEO
#
echo 'running DLAINSTALL'
${DLAINSTALL} ${DEV}

#
# Create the input directory if it doesn't exist.
#
if [ ! -d ${INPUTDIR} ]
then
    mkdir -p ${INPUTDIR}
fi

# establish the config file
AE_CONFIG=ae_htload.config

# Make sure config file exists and source it
if [ -r ${AE_CONFIG} ]
then
    echo "Source ${AE_CONFIG}"
    . ${AE_CONFIG}
else
    echo "Cannot source configuration file: ${AE_CONFIG}"
    installFailed
fi

# Check to see if this is a development installation
#
DEV=""
if [ "${INSTALL_TYPE}" = "dev" ]
then
    DEV="-d"
fi

#
# run DLAInstall for AE 
#
echo 'running DLAINSTALL'
${DLAINSTALL} ${DEV}

#
# Create the input directory if it doesn't exist.
#
if [ ! -d ${INPUTDIR} ]
then
    mkdir -p ${INPUTDIR}
fi

